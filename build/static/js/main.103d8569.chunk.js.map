{"version":3,"sources":["components/Squares.jsx","components/Board.jsx","components/Game.jsx","components/App.jsx","index.js"],"names":["Square","props","className","onClick","onClickEvent","value","calculateWinner","squares","line","a","b","c","Board","initialSquares","Array","fill","useState","setSquares","xIsNext","setXIsNest","renderSquare","i","copy","winnerDeclared","Boolean","squareFilled","handleClickEvent","winner","status","class","aria-hidden","Game","App","id","Date","getFullYear","ReactDOM","render","document","getElementById"],"mappings":"8KAUeA,EARA,SAACC,GACZ,OACE,4BAAQC,UAAU,SAASC,QAASF,EAAMG,cACvCH,EAAMI,QCsDb,SAASC,EAAiBC,GAO1B,IANE,IAMF,MANgB,CACZ,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAC7B,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,GAAI,CAAC,EAAG,EAAG,IAG5C,eAAwB,CAAnB,IAAIC,EAAI,KACX,cAAkBA,EAAlB,GAAOC,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAIJ,EAAQE,IAAMF,EAAQE,KAAOF,EAAQG,IAAMH,EAAQE,KAAOF,EAAQI,GACpE,OAAOJ,EAAQE,GAGnB,OAAO,KAIMG,MAxEC,WAEZ,IAAMC,EAAiBC,MAAM,GAAGC,KAAK,MACrC,EAA8BC,mBAASH,GAAvC,mBAAON,EAAP,KAAgBU,EAAhB,KACA,EAA8BD,oBAAS,GAAvC,mBAAOE,EAAP,KAAgBC,EAAhB,KAqBMC,EAAe,SAACC,GACpB,OACE,oCACA,kBAAC,EAAD,CACAhB,MAAOE,EAAQc,GACfjB,aAAc,kBApBO,SAACiB,GACxB,IAAIC,EAAI,YAAOf,GAETgB,EAAiBC,QAAQlB,EAAgBgB,IACzCG,EAAeD,QAAQF,EAAKD,IAE/BE,GAAkBE,IAIrBH,EAAKD,GAAKH,EAAU,IAAM,IAC1BD,EAAWK,GACXH,GAAYD,IAQUQ,CAAiBL,QAMnCM,EAASrB,EAAgBC,GACzBqB,EAASD,EAAM,kBAAcA,GAAd,uBAAyCT,EAAU,IAAM,KAE9E,OACE,6BACE,yBAAKhB,UAAU,UAAS,2BAAI0B,GAA5B,IAAwC,4BAAQzB,QAnCpC,WACdc,EAAWJ,IAkCyDX,UAAU,QAAO,uBAAG2B,MAAM,gBAAgBC,cAAY,WACxH,yBAAK5B,UAAU,aACZkB,EAAa,GADhB,IACqBA,EAAa,GADlC,IACuCA,EAAa,IAEpD,yBAAKlB,UAAU,aACZkB,EAAa,GADhB,IACqBA,EAAa,GADlC,IACuCA,EAAa,IAEpD,yBAAKlB,UAAU,aACZkB,EAAa,GADhB,IACqBA,EAAa,GADlC,IACuCA,EAAa,MCzC7CW,EATF,WACT,OACE,yBAAK7B,UAAU,QACb,2CACA,kBAAC,EAAD,QCIO8B,MARf,WACE,OACA,6BACA,kBAAC,EAAD,MACA,uBAAGC,GAAG,UAAN,mBAAiC,IAAIC,MAAOC,cAA5C,aCHFC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.103d8569.chunk.js","sourcesContent":["import React from \"react\" \r\n\r\nconst Square = (props) => {\r\n    return (\r\n      <button className=\"square\" onClick={props.onClickEvent}>\r\n        {props.value}\r\n      </button>\r\n    )\r\n  }\r\n\r\nexport default Square","import React, {useState} from \"react\"\r\nimport Square from \"./Squares\";\r\n  \r\n  \r\n  const Board = () => {\r\n  \r\n    const initialSquares = Array(9).fill(null)\r\n    const [squares, setSquares] = useState(initialSquares);\r\n    const [xIsNext, setXIsNest] = useState(true);\r\n  \r\n    const restart = () => {\r\n      setSquares(initialSquares)\r\n  }\r\n  \r\n    const handleClickEvent = (i) => {\r\n      let copy = [...squares];\r\n  \r\n      const winnerDeclared = Boolean(calculateWinner(copy))\r\n      const squareFilled = Boolean(copy[i])\r\n      \r\n      if(winnerDeclared || squareFilled)  {\r\n        return;\r\n      };\r\n  \r\n      copy[i] = xIsNext ? 'X' : 'O';\r\n      setSquares(copy)\r\n      setXIsNest(!xIsNext)\r\n    }\r\n  \r\n    const renderSquare = (i) => {\r\n      return (\r\n        <>\r\n        <Square \r\n        value={squares[i]}\r\n        onClickEvent={() => handleClickEvent(i)}\r\n        />\r\n        </>\r\n      )\r\n    }\r\n    \r\n    const winner = calculateWinner(squares);\r\n    const status = winner ? `Winner: ${winner}` : `Next player: ${xIsNext ? 'X' : 'O'}`;\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"status\"><p>{status}</p> <button onClick={restart} className=\"icon\"><i class=\"fa fa-refresh\" aria-hidden=\"true\"></i></button></div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(0)} {renderSquare(1)} {renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(3)} {renderSquare(4)} {renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {renderSquare(6)} {renderSquare(7)} {renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  function calculateWinner (squares) {\r\n    const lines = [\r\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], //rows\r\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], //columns\r\n      [0, 4, 8], [2, 4, 6], [6, 4, 2], [8, 4, 0] //diagonals\r\n    ]\r\n  \r\n  for (let line of lines) {\r\n    const [a, b, c] = line;\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];  //'X' or 'O'\r\n    }\r\n  }\r\n  return null;\r\n  }\r\n\r\n\r\nexport default Board;","import React from \"react\"\r\nimport Board from \"./Board\"\r\n\r\nconst Game = () => {\r\n    return (\r\n      <div className=\"game\">\r\n        <h2>Tic-Tac-Toe</h2>\r\n        <Board />\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Game","import React from \"react\";\nimport Game from \"./Game\"\n\nfunction App() {\n  return (\n  <div>\n  <Game />\n  <p id=\"footer\">Copyright &copy; {new Date().getFullYear()} Noobie</p>\n  </div>)\n} \n\nexport default App;\n\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}